

if not game:IsLoaded() then
    game.Loaded:Wait()
end
local a = "Test ADS"
local b = "AnimeDimension.lua"
function saveSettings()
    local c = game:GetService("HttpService")
    local d = c:JSONEncode(_G.Settings)
    if writefile then
        if isfolder(a) then
            writefile(a .. "\\" .. b, d)
        else
            makefolder(a)
            writefile(a .. "\\" .. b, d)
        end
    end
end
function loadSettings()
    local c = game:GetService("HttpService")
    if isfile(a .. "\\" .. b) then
        _G.Settings = c:JSONDecode(readfile(a .. "\\" .. b))
    end
end
loadSettings()
local e = game:GetService("ReplicatedStorage")
local f = game:GetService("VirtualInputManager")
local g = game:GetService("Players")
local h = game:GetService("VirtualUser")
local i = game:GetService("TweenService")
local j = g.LocalPlayer


local Uilib = loadstring(game:HttpGet("https://raw.githubusercontent.com/siradaniy/HSz/main/finitylib.lua"))()

function HideGui()
    local k = game.CoreGui:FindFirstChild("Orion")
    local l
    for m, n in pairs(k:GetChildren()) do
        if m == 2 then
            l = n
        end
    end
    if k.Enabled then
        l:TweenSize(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
        repeat
            task.wait()
        until l.Size.Y.Offset < 1
        k.Enabled = false
    else
        l:TweenSize(UDim2.new(0, 615, 0, 344), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
        repeat
            task.wait()
        until l.Size.Y.Offset > 1
        k.Enabled = true
    end
end
spawn(
    function()
        j = game.Players.LocalPlayer
        Mouse = j:GetMouse()
        Mouse.KeyDown:connect(
            function(o)
                o = o:lower()
                if o ==  toggleguikey then
                    task.spawn(HideGui)
                end
            end
        )
    end
)
j.Idled:Connect(
    function()
        h:ClickButton2(Vector2.new())
    end
)
local p = {
    "Sung Jin Woo",
    "MilimCharacter (Valentine)",
    "Ryuko",
    "Saber Alter Character",
    "Alice",
    "Broly",
    "Gilgamesh",
    "Kokushibo",
    "Ice Queen Esdeath",
    "Katakuri",
    "Levi",
    "Naruto Six Paths",
    "RimuruDemonLord",
    "KiritoCharacter",
    "Megumin (Halloween)",
    "RengokuCharacter",
    "KanekiCharacter",
    "Lancer",
    "Nezuko (New Year)",
    "TogaCharacter (Halloween)",
    "Megumin (Halloween)",
    "Emiya Archer",
    "Sukuna",
    "Infinity Gojo",
    "AsunaCharacter",
    "Zoro",
    "All Might",
    "Rukia",
    "Shinra",
    "Tanjiro",
    "Gray",
    "Sasuke",
    "Akaza",
    "Asta",
    "Killua",
    "Natsu",
    "Sakura",
    "Accelerator",
    "Deku",
    "Goku",
    "Ichigo",
    "Luffy",
    "Naruto",
    "Gojo",
    "Genos",
    "Attack Titan",
    "Eugeo",
    "Gear 5 Luffy",
    "Esper",
    "Astolfo Summer Character"
}
local q = {
    "Infinite Mode",
    "Titan Dimension",
    "Demon Dimension",
    "Curse Dimension",
    "Villain Dimension",
    "Sword Dimension",
    "Ghoul Dimension",
    "Fate Dimension",
    "Slime Dimension"
}
local r = {"Easy", "Hard", "Nightmare", "Infinite"}
local s = {"Capsule Series 1", "Raid Capsule", "Gear 5 Fluffy Capsule", "Esper Capsule"}
local t = { "Tengoku Raid", "Hirito Raid", "Titan Raid", "Esper Raid" ,"Demon Lord Raid","Yomiichi Raid", "Christmas Raid","Combat Titan Raid", "Infinity Nojo Raid", "Gear 5 Fluffy Raid", "Vio Raid", "Cosmic Wolfman Raid", "Black Pasta Raid", "Joto Raid" }
local u = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Orion/main/source"))()
local v = u:MakeWindow({Name = "‚òÄÔ∏è Test ADS ‚òÄÔ∏è", HidePremium = true})
local w = v:MakeTab({Name = "Main", PremiumOnly = false})
local x = v:MakeTab({Name = "Extra", PremiumOnly = false})
local D = v:MakeTab({Name = "TP Method", PremiumOnly = false})
local E = v:MakeTab({Name = "Auto S & P", PremiumOnly = false})
local y = v:MakeTab({Name = "Specific & Raid", PremiumOnly = false})
local F = v:MakeTab({Name = "Afk Farm", PremiumOnly = false})
local z = v:MakeTab({Name = "Notifier", PremiumOnly = false})
local A = v:MakeTab({Name = "Auto Sell", PremiumOnly = false})
local B = v:MakeTab({Name = "Auto Spin", PremiumOnly = false})
local C = v:MakeTab({Name = "Auto Claim", PremiumOnly = false})
local G = v:MakeTab({Name = "Credits", PremiumOnly = false})

--[[
Name = <string> - The name of the colorpicker.
Default = <color3> - The default value of the colorpicker.
Callback = <function> - The function of the colorpicker.
]]

w:AddToggle(
    {
        Name = "üåÄ Auto Level",
        Default =  Autolvl,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             Autolvl = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait(7) do
                        if not  Autolvl then
                            break
                        end
                        wait(10)
                        Lvl = game.Players.LocalPlayer.leaderstats.Level.Value
                        if Lvl > 0 and Lvl < 6 then
                            wait(1)
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "CreateRoom",
                                {
                                    ["Difficulty"] = "Easy",
                                    ["FriendsOnly"] =  FriendsOnly,
                                    ["MapName"] = "Titan Dimension",
                                    ["Hardcore"] = false
                                }
                            )
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "TeleportPlayers"
                            )
                        end
                        if Lvl > 5 and Lvl < 11 then
                            wait(1)
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "CreateRoom",
                                {
                                    ["Difficulty"] = "Hard",
                                    ["FriendsOnly"] =  FriendsOnly,
                                    ["MapName"] = "Titan Dimension",
                                    ["Hardcore"] = false
                                }
                            )
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "TeleportPlayers"
                            )
                        end
                        if Lvl > 10 and Lvl < 16 then
                            wait(1)
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "CreateRoom",
                                {
                                    ["Difficulty"] = "Nightmare",
                                    ["FriendsOnly"] =  FriendsOnly,
                                    ["MapName"] = "Titan Dimension",
                                    ["Hardcore"] = false
                                }
                            )
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "TeleportPlayers"
                            )
                        end
                        if Lvl > 15 and Lvl < 21 then
                            wait(1)
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "CreateRoom",
                                {
                                    ["Difficulty"] = "Easy",
                                    ["FriendsOnly"] =  FriendsOnly,
                                    ["MapName"] = "Demon Dimension",
                                    ["Hardcore"] = false
                                }
                            )
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "TeleportPlayers"
                            )
                        end
                        if Lvl > 20 and Lvl < 26 then
                            wait(1)
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "CreateRoom",
                                {
                                    ["Difficulty"] = "Hard",
                                    ["FriendsOnly"] =  FriendsOnly,
                                    ["MapName"] = "Demon Dimension",
                                    ["Hardcore"] = false
                                }
                            )
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "TeleportPlayers"
                            )
                        end
                        if Lvl > 25 and Lvl < 31 then
                            wait(1)
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "CreateRoom",
                                {
                                    ["Difficulty"] = "Nightmare",
                                    ["FriendsOnly"] =  FriendsOnly,
                                    ["MapName"] = "Demon Dimension",
                                    ["Hardcore"] = false
                                }
                            )
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "TeleportPlayers"
                            )
                        end
                        if Lvl > 30 and Lvl < 36 then
                            wait(1)
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "CreateRoom",
                                {
                                    ["Difficulty"] = "Easy",
                                    ["FriendsOnly"] =  FriendsOnly,
                                    ["MapName"] = "Curse Dimension",
                                    ["Hardcore"] = false
                                }
                            )
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "TeleportPlayers"
                            )
                        end
                        if Lvl > 35 and Lvl < 41 then
                            wait(1)
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "CreateRoom",
                                {
                                    ["Difficulty"] = "Hard",
                                    ["FriendsOnly"] =  FriendsOnly,
                                    ["MapName"] = "Curse Dimension",
                                    ["Hardcore"] = false
                                }
                            )
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "TeleportPlayers"
                            )
                        end
                        if Lvl > 40 and Lvl < 46 then
                            wait(1)
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "CreateRoom",
                                {
                                    ["Difficulty"] = "Nightmare",
                                    ["FriendsOnly"] =  FriendsOnly,
                                    ["MapName"] = "Curse Dimension",
                                    ["Hardcore"] = false
                                }
                            )
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "TeleportPlayers"
                            )
                        end
                        if Lvl > 45 and Lvl < 51 then
                            wait(1)
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "CreateRoom",
                                {
                                    ["Difficulty"] = "Easy",
                                    ["FriendsOnly"] =  FriendsOnly,
                                    ["MapName"] = "Villain Dimension",
                                    ["Hardcore"] = false
                                }
                            )
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "TeleportPlayers"
                            )
                        end
                        if Lvl > 50 and Lvl < 56 then
                            wait(1)
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "CreateRoom",
                                {
                                    ["Difficulty"] = "Hard",
                                    ["FriendsOnly"] =  FriendsOnly,
                                    ["MapName"] = "Villain Dimension",
                                    ["Hardcore"] = false
                                }
                            )
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "TeleportPlayers"
                            )
                        end
                        if Lvl > 55 and Lvl < 61 then
                            wait(1)
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "CreateRoom",
                                {
                                    ["Difficulty"] = "Nightmare",
                                    ["FriendsOnly"] =  FriendsOnly,
                                    ["MapName"] = "Villain Dimension",
                                    ["Hardcore"] = false
                                }
                            )
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "TeleportPlayers"
                            )
                        end
                        if Lvl > 60 and Lvl < 68 then
                            wait(1)
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "CreateRoom",
                                {
                                    ["Difficulty"] = "Easy",
                                    ["FriendsOnly"] =  FriendsOnly,
                                    ["MapName"] = "Sword Dimension",
                                    ["Hardcore"] = false
                                }
                            )
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "TeleportPlayers"
                            )
                        end
                        if Lvl > 67 and Lvl < 76 then
                            wait(1)
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "CreateRoom",
                                {
                                    ["Difficulty"] = "Nightmare",
                                    ["FriendsOnly"] =  FriendsOnly,
                                    ["MapName"] = "Sword Dimension",
                                    ["Hardcore"] = false
                                }
                            )
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "TeleportPlayers"
                            )
                        end
                        if Lvl > 75 and Lvl < 83 then
                            wait(1)
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "CreateRoom",
                                {
                                    ["Difficulty"] = "Easy",
                                    ["FriendsOnly"] =  FriendsOnly,
                                    ["MapName"] = "Ghoul Dimension",
                                    ["Hardcore"] = false
                                }
                            )
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "TeleportPlayers"
                            )
                        end
                        if Lvl > 82 and Lvl < 91 then
                            wait(1)
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "CreateRoom",
                                {
                                    ["Difficulty"] = "Nightmare",
                                    ["FriendsOnly"] =  FriendsOnly,
                                    ["MapName"] = "Ghoul Dimension",
                                    ["Hardcore"] = false
                                }
                            )
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "TeleportPlayers"
                            )
                        end
                        if Lvl > 90 and Lvl < 98 then
                            wait(1)
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "CreateRoom",
                                {
                                    ["Difficulty"] = "Easy",
                                    ["FriendsOnly"] =  FriendsOnly,
                                    ["MapName"] = "Fate Dimension",
                                    ["Hardcore"] = false
                                }
                            )
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "TeleportPlayers"
                            )
                        end
                        if Lvl > 97 and Lvl < 106 then
                            wait(1)
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "CreateRoom",
                                {
                                    ["Difficulty"] = "Nightmare",
                                    ["FriendsOnly"] =  FriendsOnly,
                                    ["MapName"] = "Fate Dimension",
                                    ["Hardcore"] = false
                                }
                            )
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "TeleportPlayers"
                            )
                        end
                        if Lvl > 105 then
                            wait(1)
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "CreateRoom",
                                {
                                    ["Difficulty"] = "Easy",
                                    ["FriendsOnly"] =  FriendsOnly,
                                    ["MapName"] = "Slime Dimension",
                                    ["Hardcore"] = false
                                }
                            )
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "TeleportPlayers"
                            )
                        end
                    end
                end
            )
        end
    }
)
w:AddToggle(
    {
        Name = "üåÄ Farm Time Challenge",
        Default =  Autotrial,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             Autotrial = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait(7) do
                        if not  Autotrial then
                            break
                        end
                        game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                            "TeleportToTimeChallenge"
                        )
                    end
                end
            )
        end
    }
)
w:AddToggle(
    {
        Name = "üåÄ Farm Specific Map",
        Default =  Autocustom,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             Autocustom = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait(7) do
                        if not  Autocustom then
                            break
                        end
                        game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                            "CreateRoom",
                            {
                                ["Difficulty"] =  CustomDifficulty,
                                ["FriendsOnly"] =  FriendsOnly,
                                ["MapName"] =  custommapselect,
                                ["Hardcore"] = false
                            }
                        )
                        game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                            "TeleportPlayers"
                        )
                    end
                end
            )
        end
    }
)
w:AddToggle(
    {
        Name = "üåÄ Farm Raid",
        Default =  Autoraid,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             Autoraid = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait(3) do
                        if not  Autoraid then
                            break
                        end
                        game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                            "CreateRoom",
                            {
                                ["Difficulty"] = "Easy",
                                ["FriendsOnly"] = true,
                                ["MapName"] =  Raidselectmap,
                                ["Hardcore"] = false
                            }
                        )
                        game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                            "TeleportPlayers"
                        )
                    end
                end
            )
        end
    }
)
F:AddToggle(
    {
        Name = "Farm Raid + AFK",
        Default =  afkandraid,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             afkandraid = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait(3) do
                        if not  afkandraid then
                            break
                        end
                        spawn(
                            function()
                                if game.PlaceId == 7274690025 or game.PlaceId == 6938803436 then
                                    game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                        "CreateRoom",
                                        {
                                            ["Difficulty"] = "Easy",
                                            ["FriendsOnly"] = true,
                                            ["MapName"] =  Raidselectmap,
                                            ["Hardcore"] = false
                                        }
                                    )
                                    game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                        "TeleportPlayers"
                                    )
                                    wait(5)
                                    game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                        "TeleportToAFK"
                                    )
                                end
                            end
                        )
                        spawn(
                            function()
                                if game.PlaceId == 6990131029 then
                                    wait(300)
                                    game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                        "TeleportToLobbyAFK",
                                        true
                                    )
                                end
                            end
                        )
                    end
                end
            )
        end
    }
)
F:AddToggle(
    {
        Name = "Farm Raid Token",
        Default =  farmraidtoken,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             farmraidtoken = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait(260) do
                        if not  farmraidtoken then
                            break
                        end
                        spawn(
                            function()
                                if game.PlaceId == 6990131029 then
                                    _G.Name = game.Players.LocalPlayer.Name .. "StatDisplay"
                                    valuecurrency = game.ReplicatedStorage[_G.Name].AfkCurrencyChosen.Value
                                    if valuecurrency == "Gem" then
                                        wait(1)
                                        game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                            "ChangeAFKCurrency"
                                        )
                                        for m, n in pairs(
                                            getconnections(
                                                game.Players.LocalPlayer.PlayerGui.AfkGui.CenterUIFrame.Frame.ChangeCurrency.MouseButton1Click
                                            )
                                        ) do
                                            n:Fire()
                                        end
                                    end
                                end
                            end
                        )
                    end
                end
            )
        end
    }
)
F:AddLabel("If You Want Farm Gem Untoggle Farm Raid Token")
w:AddToggle(
    {
        Name = "üåÄ Farm Boss Rush",
        Default =  Autoboss,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             Autoboss = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait(4) do
                        if not  Autoboss then
                            break
                        end
                        game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                            "TeleportToBossRush"
                        )
                    end
                end
            )
        end
    }
)

w:AddToggle(
    {
        Name = "üåÄ Farm Speed Raid (Auto Random Character)",
        Default =  Autospeedraid,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             Autospeedraid = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait(2) do
                        if not  Autospeedraid then
                            break
                        end
                        wait()
                        local X = {
                            "Sung Jin Woo",
                            "MilimCharacter (Valentine)",
                            "Ryuko",
                            "Saber Alter Character",
                            "Alice",
                            "Broly",
                            "Gilgamesh",
                            "Kokushibo",
                            "Ice Queen Esdeath",
                            "Katakuri",
                            "Levi",
                            "Naruto Six Paths",
                            "RimuruDemonLord",
                            "KiritoCharacter",
                            "Megumin (Halloween)",
                            "RengokuCharacter",
                            "KanekiCharacter",
                            "Lancer",
                            "Nezuko (New Year)",
                            "TogaCharacter (Halloween)",
                            "Megumin (Halloween)",
                            "Emiya Archer",
                            "Sukuna",
                            "Infinity Gojo",
                            "AsunaCharacter",
                            "Zoro",
                            "All Might",
                            "Rukia",
                            "Shinra",
                            "Tanjiro",
                            "Gray",
                            "Sasuke",
                            "Akaza",
                            "Asta",
                            "Killua",
                            "Natsu",
                            "Sakura",
                            "Accelerator",
                            "Deku",
                            "Goku",
                            "Ichigo",
                            "Luffy",
                            "Naruto",
                            "Gojo",
                            "Genos",
                            "Attack Titan",
                            "Eugeo",
                            "Gear 5 Luffy",
                            "Esper",
                            "Katakuri (Summer) Character",
                            "Astolfo Summer Character"
                        }
                        local Y = math.random(1, #X)
                        local Z = X[Y]
                        game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                            "TeleportToShadowRaid",
                            Z
                        )
                    end
                end
            )
        end
    }
)

A:AddToggle(
    {
        Name = "Auto Sell Common",
        Default =  autosellcommon,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             autosellcommon = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait(1) do
                        if not  autosellcommon then
                            break
                        end
                        wait()
                        local I = {"Common"}
                        local J = game.Players.LocalPlayer.PlayerGui.MainGui.CenterUIFrame.Inventory
                        local K = J.Frame.CardInventoryFrame.CardInventoryScrollingFrame
                        function SellCard(L)
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "SellCard",
                                L
                            )
                        end
                        for M, N in pairs(K:GetChildren()) do
                            if N:IsA("ImageButton") then
                                for O, P in next, getconnections(N.CardClick.MouseButton1Down) do
                                    P:Fire()
                                    local Q = J.Frame.InvOverlayOuterFrame.CardInventoryOverlay.Rarity.Text
                                    for R, S in next, I do
                                        if Q == S then
                                            SellCard(N.Name)
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            )
        end
    }
)
A:AddToggle(
    {
        Name = "Auto Sell Uncommon",
        Default =  autoselluncommon,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             autoselluncommon = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait(1) do
                        if not  autoselluncommon then
                            break
                        end
                        wait()
                        local I = {"Uncommon"}
                        local J = game.Players.LocalPlayer.PlayerGui.MainGui.CenterUIFrame.Inventory
                        local K = J.Frame.CardInventoryFrame.CardInventoryScrollingFrame
                        function SellCard(L)
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "SellCard",
                                L
                            )
                        end
                        for M, N in pairs(K:GetChildren()) do
                            if N:IsA("ImageButton") then
                                for O, P in next, getconnections(N.CardClick.MouseButton1Down) do
                                    P:Fire()
                                    local Q = J.Frame.InvOverlayOuterFrame.CardInventoryOverlay.Rarity.Text
                                    for R, S in next, I do
                                        if Q == S then
                                            SellCard(N.Name)
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            )
        end
    }
)
A:AddToggle(
    {
        Name = "Auto Sell Rare",
        Default =  autosellrare,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             autosellrare = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait(1) do
                        if not  autosellrare then
                            break
                        end
                        wait()
                        local I = {"Rare"}
                        local J = game.Players.LocalPlayer.PlayerGui.MainGui.CenterUIFrame.Inventory
                        local K = J.Frame.CardInventoryFrame.CardInventoryScrollingFrame
                        function SellCard(L)
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "SellCard",
                                L
                            )
                        end
                        for M, N in pairs(K:GetChildren()) do
                            if N:IsA("ImageButton") then
                                for O, P in next, getconnections(N.CardClick.MouseButton1Down) do
                                    P:Fire()
                                    local Q = J.Frame.InvOverlayOuterFrame.CardInventoryOverlay.Rarity.Text
                                    for R, S in next, I do
                                        if Q == S then
                                            SellCard(N.Name)
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            )
        end
    }
)
A:AddToggle(
    {
        Name = "Auto Sell Epic",
        Default =  autosellepic,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             autosellepic = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait(1) do
                        if not  autosellepic then
                            break
                        end
                        wait()
                        local I = {"Epic"}
                        local J = game.Players.LocalPlayer.PlayerGui.MainGui.CenterUIFrame.Inventory
                        local K = J.Frame.CardInventoryFrame.CardInventoryScrollingFrame
                        function SellCard(L)
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "SellCard",
                                L
                            )
                        end
                        for M, N in pairs(K:GetChildren()) do
                            if N:IsA("ImageButton") then
                                for O, P in next, getconnections(N.CardClick.MouseButton1Down) do
                                    P:Fire()
                                    local Q = J.Frame.InvOverlayOuterFrame.CardInventoryOverlay.Rarity.Text
                                    for R, S in next, I do
                                        if Q == S then
                                            SellCard(N.Name)
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            )
        end
    }
)
A:AddToggle(
    {
        Name = "Auto Sell Legendary",
        Default =  autoselllegendary,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             autoselllegendary = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait(1) do
                        if not  autoselllegendary then
                            break
                        end
                        wait()
                        local I = {"Legendary"}
                        local J = game.Players.LocalPlayer.PlayerGui.MainGui.CenterUIFrame.Inventory
                        local K = J.Frame.CardInventoryFrame.CardInventoryScrollingFrame
                        function SellCard(L)
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                                "SellCard",
                                L
                            )
                        end
                        for M, N in pairs(K:GetChildren()) do
                            if N:IsA("ImageButton") then
                                for O, P in next, getconnections(N.CardClick.MouseButton1Down) do
                                    P:Fire()
                                    local Q = J.Frame.InvOverlayOuterFrame.CardInventoryOverlay.Rarity.Text
                                    for R, S in next, I do
                                        if Q == S then
                                            SellCard(N.Name)
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            )
        end
    }
)
D:AddToggle(
    {
        Name = "TP onTop",
        Default =  AutoTP,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             AutoTP = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait() do
                        if not  AutoTP then
                            break
                        end
                        pcall(
                            function()
                                game.Players.LocalPlayer.Character.Humanoid:ChangeState(16)
                                --game.Players.LocalPlayer.Character.HumanoidRootPart.CanCollide = false
                            end
                        )
                        pcall(
                            function()
                                for m, n in pairs(game:GetService("Workspace").Folders.Monsters:GetChildren()) do
                                    repeat
                                        game:GetService("RunService").Heartbeat:wait()
                                        local T =
                                            (n.Head.Position -
                                            game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                                        if T < 999 then
                                            Speed2 =  Speed
                                        end
                                        local U = game:service "TweenService"
                                        local V = TweenInfo.new(T / Speed2, Enum.EasingStyle.Linear)
                                        local W =
                                            U:Create(
                                            game:GetService("Players").LocalPlayer.Character["HumanoidRootPart"],
                                            V,
                                            {
                                                CFrame = n.HumanoidRootPart.CFrame * CFrame.Angles(math.rad(-90), 0, 0) +
                                                    Vector3.new(0,  Height, 0)
                                            }
                                        )
                                        W:Play()
                                        wait(T / Speed2)
                                    until not  AutoTP or n.Humanoid.Health <= 0 or not n.Parent or not n
                                end
                            end
                        )
                    end
                end
            )
        end
    }
)
D:AddToggle(
    {
        Name = "TP Under",
        Default =  AutoTP1,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             AutoTP1 = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait() do
                        if not  AutoTP1 then
                            break
                        end
                        pcall(
                            function()
                                game.Players.LocalPlayer.Character.Humanoid:ChangeState(16)
                               -- game.Players.LocalPlayer.Character.HumanoidRootPart.CanCollide = false
                            end
                        )
                        pcall(
                            function()
                                for m, n in pairs(game:GetService("Workspace").Folders.Monsters:GetChildren()) do
                                    repeat
                                        game:GetService("RunService").Heartbeat:wait()
                                        local T =
                                            (n.Head.Position -
                                            game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                                        if T < 999 then
                                            Speed2 =  Speed
                                        end
                                        local U = game:service "TweenService"
                                        local V = TweenInfo.new(T / Speed2, Enum.EasingStyle.Linear)
                                        local W =
                                            U:Create(
                                            game:GetService("Players").LocalPlayer.Character["HumanoidRootPart"],
                                            V,
                                            {
                                                CFrame = n.HumanoidRootPart.CFrame * CFrame.Angles(math.rad(90), 0, 0) +
                                                    Vector3.new(0,  Height1, 0)
                                            }
                                        )
                                        W:Play()
                                        wait(T / Speed2)
                                    until not  AutoTP1 or n.Humanoid.Health <= 0 or not n.Parent or not n
                                end
                            end
                        )
                    end
                end
            )
        end
    }
)
D:AddToggle(
    {
        Name = "TP Behind",
        Default =  AutoTP2,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             AutoTP2 = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait() do
                        if not  AutoTP2 then
                            break
                        end
                        pcall(
                            function()
                                for m, n in pairs(game:GetService("Workspace").Folders.Monsters:GetChildren()) do
                                    repeat
                                        game:GetService("RunService").Heartbeat:wait()
                                        local T =
                                            (n.HumanoidRootPart.Position -
                                            game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                                        if T < 999 then
                                            Speed2 =  Speed
                                        elseif T < 1000 then
                                            Speed2 =  Speed
                                        elseif T >= 1000 then
                                            Speed2 =  Speed
                                        end
                                        local U = game:service "TweenService"
                                        local V = TweenInfo.new(T / Speed2, Enum.EasingStyle.Linear)
                                        local W =
                                            U:Create(
                                            game:GetService("Players").LocalPlayer.Character["HumanoidRootPart"],
                                            V,
                                            {
                                                CFrame = n.HumanoidRootPart.CFrame *
                                                    CFrame.new(0, 0,  distance)
                                            }
                                        )
                                        W:Play()
                                        wait(T / Speed2)
                                    until not  AutoTP2 or n.Humanoid.Health <= 0 or not n.Parent or not n
                                end
                            end
                        )
                    end
                end
            )
        end
    }
)
y:AddDropdown(
    {Name = "Select Difficulty", Default =  CustomDifficulty, Options = r, Callback = function(H)
             CustomDifficulty = H
            saveSettings()
        end}
)
B:AddDropdown(
    {Name = "Select Capsule", Default =  selectegg, Options = s, Callback = function(H)
             selectegg = H
            saveSettings()
        end}
)
y:AddDropdown(
    {Name = "Select Map", Default =  custommapselect, Options = q, Callback = function(H)
             custommapselect = H
            saveSettings()
        end}
)
y:AddDropdown(
    {Name = "Select Raid", Default =  Raidselectmap, Options = t, Callback = function(H)
             Raidselectmap = H
            saveSettings()
        end}
)
B:AddToggle(
    {
        Name = "Auto Capsule",
        Default =  autospingem,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             autospingem = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait( eggspintime) do
                        if not  autospingem then
                            break
                        end
                        game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                            "BuyEgg",
                             selectegg
                        )
                    end
                end
            )
        end
    }
)
z:AddTextbox(
    {Name = "Webhook Url", Default =  webhookurl, TextDisappear = false, Callback = function(H)
             webhookurl = H
            saveSettings()
        end}
)
z:AddToggle(
    {
        Name = "Clear Notifier",
        Default =  webhook,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             webhook = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait( webhookspeed) do
                        if not  webhook then
                            break
                        end
                        if
                            game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.ResultUI.Visible ==
                                true
                         then
                            _G.Name = game.Players.LocalPlayer.Name .. "StatDisplay"
                            function webhook(_, a0)
                                local request = http_request or request or HttpPost or syn.request
                                request(
                                    {
                                        Url =  webhookurl,
                                        Method = "POST",
                                        Headers = {["Content-Type"] = "application/json"},
                                        Body = game:GetService("HttpService"):JSONEncode({embeds = {_}, content = a0})
                                    }
                                )
                            end
                            local _ = {
                                ["title"] = "GAME CLEAR",
                                ["type"] = "rich",
                                ["thumbnail"] = {
                                    ["url"] = "https://tr.rbxcdn.com/3eba3ee83f4f32a0691f8e40738f1833/768/432/Image/Png"
                                },
                                ["description"] = "Character Info / Session Info:",
                                ["fields"] = {
                                    {
                                        ["name"] = "üí• My Level",
                                        ["value"] = game:GetService("HttpService"):JSONDecode(
                                            game.Players.LocalPlayer.leaderstats.Level.Value
                                        )
                                    },
                                    {
                                        ["name"] = "‚ö†Ô∏è Exploit Detected",
                                        ["value"] = game:GetService("HttpService"):JSONDecode(
                                            game.ReplicatedStorage[_G.Name].ExploitsDetected.Value
                                        )
                                    },
                                    {
                                        ["name"] = "üí† Infinite Record",
                                        ["value"] = game:GetService("HttpService"):JSONDecode(
                                            game.ReplicatedStorage[_G.Name].InfiniteRecord.Value
                                        )
                                    },
                                    {
                                        ["name"] = "üåå Dimension Clear",
                                        ["value"] = game:GetService("HttpService"):JSONDecode(
                                            game.ReplicatedStorage[_G.Name].StageClear.Value
                                        )
                                    },
                                },
                                ["timestamp"] = DateTime.now():ToIsoDate()
                            }
                            webhook(_, "<@" ..  dsuser .. ">" ..  otherds)
                        end
                    end
                end
            )
        end
    }
)
z:AddToggle(
    {
        Name = "Raid Notifier",
        Default =  raidwebhook,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             raidwebhook = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait( webhookspeed) do
                        if not  raidwebhook then
                            break
                        end
                        if
                            game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.RaidResultUI.Visible ==
                                true
                         then
                            _G.Name = game.Players.LocalPlayer.Name .. "StatDisplay"
                            function webhook(_, a0)
                                local request = http_request or request or HttpPost or syn.request
                                request(
                                    {
                                        Url =  webhookurl,
                                        Method = "POST",
                                        Headers = {["Content-Type"] = "application/json"},
                                        Body = game:GetService("HttpService"):JSONEncode({embeds = {_}, content = a0})
                                    }
                                )
                            end
                            local _ = {
                                ["title"] = "RAID & BOSSRUSH CLEAR",
                                ["type"] = "rich",
                                ["thumbnail"] = {
                                    ["url"] = "https://tr.rbxcdn.com/3eba3ee83f4f32a0691f8e40738f1833/768/432/Image/Png"
                                },
                                ["description"] = "Character Info / Session Info:",
                                ["fields"] = {
                                    {
                                        ["name"] = "‚ö†Ô∏è Exploit Detected",
                                        ["value"] = game:GetService("HttpService"):JSONDecode(
                                            game.ReplicatedStorage[_G.Name].ExploitsDetected.Value
                                        )
                                    },
                                    {
                                        ["name"] = "üåÄ Boss Rush Clear",
                                        ["value"] = game:GetService("HttpService"):JSONDecode(
                                            game.ReplicatedStorage[_G.Name].BossRushClears.Value
                                        )
                                    },
                                    {
                                        ["name"] = "üéüÔ∏è Boss Rush Ticket",
                                        ["value"] = game:GetService("HttpService"):JSONDecode(
                                            game.ReplicatedStorage[_G.Name].BossRushFreeEntry.Value
                                        )
                                    },
                                    {
                                        ["name"] = "üåÄ Raid Clear",
                                        ["value"] = game:GetService("HttpService"):JSONDecode(
                                            game.ReplicatedStorage[_G.Name].RaidClears.Value
                                        )
                                    }
                                },
                                ["timestamp"] = DateTime.now():ToIsoDate()
                            }
                            webhook(_, "<@" ..  dsuser .. ">" ..  otherds)
                        end
                    end
                end
            )
        end
    }
)
z:AddToggle(
    {
        Name = "Level Notifier",
        Default =  levelwebhook,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             levelwebhook = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait(3) do
                        if not  levelwebhook then
                            break
                        end
                        if
                            game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.LevelUpImage.Visible ==
                                true
                         then
                            _G.Name = game.Players.LocalPlayer.Name .. "StatDisplay"
                            function webhook(_, a0)
                                local request = http_request or request or HttpPost or syn.request
                                request(
                                    {
                                        Url =  webhookurl,
                                        Method = "POST",
                                        Headers = {["Content-Type"] = "application/json"},
                                        Body = game:GetService("HttpService"):JSONEncode({embeds = {_}, content = a0})
                                    }
                                )
                            end
                            local _ = {
                                ["title"] = "üÜô YOU HAVE LEVELED",
                                ["type"] = "rich",
                                ["thumbnail"] = {
                                    ["url"] = "https://tr.rbxcdn.com/3eba3ee83f4f32a0691f8e40738f1833/768/432/Image/Png"
                                },
                                ["description"] = "",
                                ["fields"] = {
                                    {
                                        ["name"] = "Your are now:",
                                        ["value"] = game:GetService("HttpService"):JSONDecode(
                                            game.Players.LocalPlayer.leaderstats.Level.Value
                                        )
                                    }
                                },
                                ["timestamp"] = DateTime.now():ToIsoDate()
                            }
                            webhook(_, "<@" ..  dsuser .. ">" ..  otherds)
                        end
                    end
                end
            )
        end
    }
)
y:AddToggle(
    {Name = "Friends Only", Default =  FriendsOnly, Color = Color3.fromRGB(255,215,0), Callback = function(H)
             FriendsOnly = H
            saveSettings()
        end}
)
x:AddToggle(
    {
        Name = "Hide Name",
        Default =  Hidename,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             Hidename = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait(1) do
                        if not  Hidename then
                            break
                        end
                        spawn(
                            function()
                                game.Players.LocalPlayer.Character.Head.PlayerHealthBarGui:Destroy()
                                game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.PlayerList, false)
                            end
                        )
                        spawn(
                            function()
                                local j = game:GetService("Players").LocalPlayer
                                local a1
                                j.CharacterAdded:Connect(
                                    function(a2)
                                        a1 = a2:WaitForChild("Humanoid")
                                    end
                                )
                                a1.Died:Connect(
                                    function()
                                        game.Players.LocalPlayer.Character.Head.PlayerHealthBarGui:Destroy()
                                        game:GetService("StarterGui"):SetCoreGuiEnabled(
                                            Enum.CoreGuiType.PlayerList,
                                            false
                                        )
                                    end
                                )
                            end
                        )
                    end
                end
            )
        end
    }
)
x:AddToggle(
    {
        Name = "Rejoin If Kick",
        Default =  kickrejoin,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             kickrejoin = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait(1) do
                        if not  kickrejoin then
                            break
                        end
                        game:GetService("CoreGui").RobloxPromptGui.promptOverlay.ChildAdded:Connect(
                            function(a3)
                                if
                                    a3.Name == "ErrorPrompt" and a3:FindFirstChild("MessageArea") and
                                        a3.MessageArea:FindFirstChild("ErrorFrame")
                                 then
                                    game:GetService("TeleportService"):Teleport(6938803436, LocalPlayer)
                                end
                            end
                        )
                    end
                end
            )
        end
    }
)
C:AddToggle(
    {
        Name = "Daily Quest",
        Default =  Autoclaimquest,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             Autoclaimquest = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait(1) do
                        if not  Autoclaimquest then
                            break
                        end
                        game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                            "CompleteDailyQuest",
                            "DailyQuest_Login"
                        )
                        game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                            "CompleteDailyQuest",
                            "DailyQuest_DungeonClear"
                        )
                        game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                            "CompleteDailyQuest",
                            "DailyQuest_Enemies"
                        )
                        game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                            "CompleteDailyQuest",
                            "DailyQuest_TimeChallenge"
                        )
                        game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                            "CompleteDailyQuest",
                            "DailyQuest_Raid"
                        )
                        game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                            "CompleteDailyQuest",
                            "DailyQuest_BossRush"
                        )
                        game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                            "CompleteDailyQuest",
                            "DailyQuest_AllQuestClear"
                        )
                    end
                end
            )
        end
    }
)
C:AddToggle(
    {
        Name = "Speed Raid Rewards",
        Default =  autoclaimrewardspeed,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             autoclaimrewardspeed = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait(1) do
                        if not  autoclaimrewardspeed then
                            break
                        end
                        game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                            "ClaimWeeklySpeedRaidReward",
                            1
                        )
                        game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                            "ClaimWeeklySpeedRaidReward",
                            2
                        )
                        game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                            "ClaimWeeklySpeedRaidReward",
                            3
                        )
                        game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                            "ClaimWeeklySpeedRaidReward",
                            4
                        )
                        game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                            "ClaimWeeklySpeedRaidReward",
                            5
                        )
                        game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                            "ClaimWeeklySpeedRaidReward",
                            6
                        )
                        game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                            "ClaimWeeklySpeedRaidReward",
                            7
                        )
                        game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                            "ClaimWeeklySpeedRaidReward",
                            8
                        )
                        game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                            "ClaimWeeklySpeedRaidReward",
                            9
                        )
                    end
                end
            )
        end
    }
)
C:AddToggle(
    {
        Name = "Daily Raid Ticket",
        Default =  autoclaimrewardraid,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             autoclaimrewardraid = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait(1) do
                        if not  autoclaimrewardraid then
                            break
                        end
                        game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(
                            "GiveFreeDailyGemFromShop"
                        )
                    end
                end
            )
        end
    }
)
E:AddLabel("Punch Setting")
E:AddSlider(
    {Name = "Punch Delay", Default =  punchdelay, Min = 1, Max = 5, Color = Color3.fromRGB(255,215,0), Callback = function(H)
             punchdelay = H
            saveSettings()
        end}
)
E:AddToggle(
    {
        Name = "Auto Punch",
        Default =  AutoPunch,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             AutoPunch = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait( punchdelay) do
                        if not  AutoPunch then
                            break
                        end
                        game:GetService("ReplicatedStorage").RemoteEvents.MainRemoteEvent:FireServer("UseSkill",{ ["attackNumber"] = 1},"BasicAttack")
                        end
                    end
            )
        end
    }
)

E:AddLabel("Skill Setting")

E:AddToggle(
    {
        Name = "skill 1",
        Default =  AutoSkill1,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             AutoSkill1 = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait( skilldelay) do
                        if not  AutoSkill1 then
                            break
                        end
                        for m, n in pairs(
                            getconnections(
                                game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder.Skill1.MouseButton1Click
                            )
                        ) do
                            n:Fire()
                        end
                    end
                end
            )
        end
    }
)
E:AddToggle(
    {
        Name = "skill 2",
        Default =  AutoSkill2,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             AutoSkill2 = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait( skilldelay) do
                        if not  AutoSkill2 then
                            break
                        end
                        for m, n in pairs(
                            getconnections(
                                game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder.Skill2.MouseButton1Click
                            )
                        ) do
                            n:Fire()
                        end
                    end
                end
            )
        end
    }
)
E:AddToggle(
    {
        Name = "skill 3",
        Default =  AutoSkill3,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             AutoSkill3 = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait( skilldelay) do
                        if not  AutoSkill3 then
                            break
                        end
                        for m, n in pairs(
                            getconnections(
                                game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder.Skill3.MouseButton1Click
                            )
                        ) do
                            n:Fire()
                        end
                    end
                end
            )
        end
    }
)
E:AddToggle(
    {
        Name = "skill 4",
        Default =  AutoSkill4,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             AutoSkill4 = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait( skilldelay) do
                        if not  AutoSkill4 then
                            break
                        end
                        for m, n in pairs(
                            getconnections(
                                game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder.Skill4.MouseButton1Click
                            )
                        ) do
                            n:Fire()
                        end
                    end
                end
            )
        end
    }
)
E:AddToggle(
    {
        Name = "skill 5 (awaken units)",
        Default =  AutoSkill5,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             AutoSkill5 = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait( skilldelay) do
                        if not  AutoSkill5 then
                            break
                        end
                        for m, n in pairs(
                            getconnections(
                                game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder.Skill5.MouseButton1Click
                            )
                        ) do
                            n:Fire()
                        end
                    end
                end
            )
        end
    }
)
E:AddToggle(
    {
        Name = "skill Fruit",
        Default =  AutoSkillFruit,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             AutoSkillFruit = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait( skilldelay) do
                        if not  AutoSkillFruit then
                            break
                        end
                        game:service('VirtualInputManager'):SendKeyEvent(true, "Z", false, game)
                        game:service('VirtualInputManager'):SendKeyEvent(true, "X", false, game)
                        end
                    end
            )
        end
    }
)
E:AddToggle(
    {
        Name = "Assist 1",
        Default =  AutoSkill5,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             AutoSkill5 = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait( skilldelay) do
                        if not  AutoSkill5 then
                            break
                        end
                        for m, n in pairs(
                            getconnections(
                                game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder.SkillAssist1.MouseButton1Click
                            )
                        ) do
                            n:Fire()
                        end
                    end
                end
            )
        end
    }
)
E:AddToggle(
    {
        Name = "Assist 2",
        Default =  AutoSkill6,
        Color = Color3.fromRGB(255,215,0),
        Callback = function(H)
             AutoSkill6 = H
            saveSettings()
            task.spawn(
                function()
                    while task.wait( skilldelay) do
                        if not  AutoSkill6 then
                            break
                        end
                        for m, n in pairs(
                            getconnections(
                                game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder.SkillAssist2.MouseButton1Click
                            )
                        ) do
                            n:Fire()
                        end
                    end
                end
            )
        end
    }
)


E:AddSlider(
    {Name = "Skill Delay", Default =  skilldelay, Min = 1, Max = 5, Color = Color3.fromRGB(255,215,0), Callback = function(H)
             skilldelay = H
            saveSettings()
        end}
)
E:AddLabel("Get exploit detected put more delay")
E:AddLabel("Reccomend 1 delay no detected")
B:AddSlider(
    {Name = "Spin Delay", Default =  eggspintime, Min = 0, Max = 10, Color = Color3.fromRGB(255,215,0), Callback = function(H)
             eggspintime = H
            saveSettings()
        end}
)
D:AddSlider(
    {Name = "Speed", Default =  Speed, Min = 80, Max = 100, Color = Color3.fromRGB(255,215,0), Callback = function(H)
             Speed = H
            saveSettings()
        end}
)
D:AddSlider(
    {Name = "Over Height", Default =  Height, Min = 5, Max = 10, Color = Color3.fromRGB(255,215,0), Callback = function(H)
             Height = H
            saveSettings()
        end}
)
D:AddSlider(
    {Name = "Under Height", Default =  Height1, Min = -15, Max = -10, Color = Color3.fromRGB(255,215,0), Callback = function(H)
             Height1 = H
            saveSettings()
        end}
)
D:AddSlider(
    {Name = "Behind Distance", Default =  distance, Min = 0, Max = 20, Color = Color3.fromRGB(255,215,0), Callback = function(H)
             distance = H
            saveSettings()
        end}
)
z:AddSlider(
    {Name = "Send Delay", Default =  webhookspeed, Min = 10, Max = 10, Color = Color3.fromRGB(255,215,0), Callback = function(H)
             webhookspeed = H
            saveSettings()
        end}
)

z:AddTextbox(
    {Name = "Put Your ID", Default =  dsuser, TextDisappear = false, Callback = function(H)
             dsuser = H
            saveSettings()
        end}
)
D:AddLabel("select behind recommend")
z:AddTextbox(
    {
        Name = "Put @here or @everyone ",
        Default =  otherds,
        TextDisappear = false,
        Callback = function(H)
             otherds = H
            saveSettings()
        end
    }
)
w:AddLabel("üîÖ Example üîÖ ")
w:AddLabel("‚ÄºÔ∏è Auto Lvl + Raid + Boss Rush ")
w:AddLabel("‚ÄºÔ∏è Specific + Raid + Boss Rush ")
w:AddLabel("‚ÄºÔ∏è Trial + Raid + Boss Rush ")
G:AddButton(
    {Name = "Script by Hiro", Callback = function()
            setclipboard("SilverHub")
        end}
)
G:AddButton(
    {Name = "Discord", Callback = function()
            setclipboard("https://discord.gg/aUd8umqUKu")
        end}
)
G:AddTextbox(
    {Name = "Toggle Gui Key", Default =  toggleguikey, TextDisappear = false, Callback = function(H)
             toggleguikey = H
            saveSettings()
        end}
)

G:AddLabel("Support to Me ")

u:MakeNotification({Name = "‚òÄÔ∏è Test ADS ‚òÄÔ∏è", Content = "Game: Anime Dimension", Time = 15})
u:Init()
